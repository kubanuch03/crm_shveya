from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _
from django.templatetags.static import static
UNFOLD = {
    "SITE_HEADER": _("CRM —Å–∏—Å—Ç–µ–º–∞"),
    "SITE_TITLE": _("CRM —Å–∏—Å—Ç–µ–º–∞"),
    "SITE_URL": "/admin/",
    "SHOW_HISTORY": True,
    "THEME": "dark",
    "SHOW_HISTORY": True,
    "BORDER_RADIUS": "6px",
   
    "EXTENSIONS": {
        "modeltranslation": {
            "flags": {
                "en": "üá¨üáß",
                "fr": "üá´üá∑",
                "nl": "üáßüá™",
            },
        },
    },
    
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": True,
        "navigation": [
            {
                "title": _("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"),
                "separator": False,
                "items": [
                    {
                        "title": _("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"),
                        "icon": "person",
                        "link": reverse_lazy("admin:app_users_user_changelist"),
                    },
                    {
                        "title": _("–ì—Ä—É–ø–ø—ã"),
                        "icon": "group",
                        "link": reverse_lazy("admin:auth_group_changelist"),
                    },
                ],
            },
    
            {
                "title": _("–ü—Ä–æ–∏–∑–≤–æ–¥—Ç—Å–≤–æ"),
                "separator": True,
                "items": [
                    {
                        "title": _("–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è –ü–∞—Ä—Ç–∏—è"),
                        "icon": "apparel",
                        "link": reverse_lazy("admin:app_productions_productionbatch_changelist"),
                    },
                    {
                        "title": _("–¢–æ–≤–∞—Ä—ã –í—Ö–æ–¥—è—â–∏–µ –≤ –ø–∞—Ä—Ç–∏—é"),
                        "icon": "apparel",
                        "link": reverse_lazy("admin:app_productions_batchproduct_changelist"),
                    },
                     {
                        "title": _("–≠—Ç–∞–ø –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞"),
                        "icon": "apparel",
                        "link": reverse_lazy("admin:app_productions_processstage_changelist"),
                    },
                     {
                        "title": _("–¢–æ–≤–∞—Ä"),
                        "icon": "apparel",
                        "link": reverse_lazy("admin:app_productions_product_changelist"),
                    },
                    # {
                    #     "title": _("–ü—Ä–æ—Ü–µ—Å—Å –®–∏—Ç—å—è"),
                    #     "icon": "apparel",
                    #     "link": reverse_lazy("admin:app_tailor_tailorprocess_changelist"),
                    # },
                    # {
                    #     "title": _("–ü—Ä–æ—Ü–µ—Å—Å –ö—Ä–æ—è"),
                    #     "icon": "apparel",
                    #     "link": reverse_lazy("admin:app_croi_croi_changelist"),
                    # },
                    
                    ],
                    
                   

            },
           
            {
                 "title": _("–õ–æ–≥–∏"),
                    "separator": True,
                    "items": [
                        {
                            "title": _("–ò—Å—Ç–æ—Ä–∏—è"),
                            "icon": "history",
                            "link": reverse_lazy("admin:app_history_adminhistorylog_changelist"),
                        },
                    ]
            },
            # {
            #     "title": _("–ú–æ–¥–µ–ª—é"),
            #     "separator": False,
            #     "items": [
            #         {
            #             "title": _("–ú–æ–¥–µ–ª—å —Ç–æ–≤–∞—Ä–∞"),
            #             "icon": "videocam",
            #             "link": reverse_lazy("admin:camera_camera_changelist"),
            #         },
            #     ],
            # },
        ],
    },
    
    "DASHBOARD_CALLBACK": "app_users.views.dashboard_callback",

}


def environment_callback(request):
    """
    Callback has to return a list of two values represeting text value and the color
    type of the label displayed in top right corner.
    """
    return ["Development", "info"]  # info, danger, warning, success


def badge_callback(request):
    return 3

