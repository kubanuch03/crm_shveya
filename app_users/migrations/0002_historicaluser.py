# Generated by Django 5.1.3 on 2025-03-06 16:25

import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app_users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalUser',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(db_index=True, max_length=255, verbose_name='Псевдоним')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Почта')),
                ('image', models.TextField(blank=True, max_length=100, null=True, verbose_name='Фото')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Дата создание')),
                ('modified_at', models.DateTimeField(blank=True, editable=False, verbose_name='Тзменено')),
                ('uuid', models.CharField(blank=True, db_index=True, null=True, verbose_name='UUiD')),
                ('phone_number', models.CharField(blank=True, max_length=14, null=True, verbose_name='Номер Телефона')),
                ('telegram', models.CharField(blank=True, max_length=255, null=True, verbose_name='Телеграм')),
                ('whatsapp', models.CharField(blank=True, max_length=255, null=True, verbose_name='WhatsApp')),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Супер пользователь')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активный')),
                ('is_technolog', models.BooleanField(default=False, verbose_name='Технолог')),
                ('is_upakovka', models.BooleanField(default=False, verbose_name='Упаковка')),
                ('is_utug', models.BooleanField(default=False, verbose_name='Утюг')),
                ('is_croi', models.BooleanField(default=False, verbose_name='Крой')),
                ('is_buttons', models.BooleanField(default=False, verbose_name='Пуговица')),
                ('is_tailor', models.BooleanField(default=False, verbose_name='Портной')),
                ('is_povar', models.BooleanField(default=False, verbose_name='Повар')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('filial', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='app_users.filial', verbose_name='Филиал')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Пользователь',
                'verbose_name_plural': 'historical Пользователи',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
